# Generated by Django 2.2.2 on 2019-07-29 20:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('postcode', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.PositiveIntegerField(blank=True, null=True)),
                ('book_name', models.CharField(max_length=200)),
                ('cover', models.CharField(choices=[('HB', 'Hardback'), ('SB', 'Softback')], default='SB', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Book_entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('stock', models.PositiveIntegerField(blank=True, null=True)),
                ('book', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Book')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('email_address', models.EmailField(max_length=254)),
                ('marketing_consent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(max_length=2000)),
                ('rating_count', models.IntegerField(blank=True, null=True)),
                ('book_entry', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Book_entry')),
                ('customer', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Payment_option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_type', models.CharField(choices=[('V', 'Visa'), ('MC', 'Mastercard'), ('AM', 'American_express'), ('PP', 'Pay_pal')], default='VISA', max_length=200)),
                ('card_name', models.CharField(max_length=200)),
                ('card_number', models.PositiveIntegerField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('security_cvc', models.PositiveIntegerField(blank=True, null=True)),
                ('customer', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Address')),
                ('basket', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Basket')),
                ('customer', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Customer')),
                ('payment_option', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Payment_option')),
            ],
        ),
        migrations.CreateModel(
            name='Line_items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('book_entry', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Book_entry')),
            ],
        ),
        migrations.AddField(
            model_name='basket',
            name='line_items',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Line_items'),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=200)),
                ('book', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Book')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='customer',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='bookshop_app.Customer'),
        ),
    ]
